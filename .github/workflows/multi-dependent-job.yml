name: "Multi level jobs Integration"

on: push

jobs:
  check_pr_labels_job:
    runs-on: ubuntu-latest
    name: A job to check the PR labels contain given labels
    outputs:
      output1: ${{ steps.check_pr_labels.outputs.result }}
    steps:
      - name: Check PR labels action step
        id: check_pr_labels
        uses: shioyang/check-pr-labels-on-push-action@v1.0.3
        with:
          github-token: ${{ github.token }}
          labels: '["Ready For Review"]'

      - name: See result
        run: echo "${{ steps.check_pr_labels.outputs.result }}"
  
  build_process_1:
    runs-on: ubuntu-latest
    name: A Job That builds 1
    outputs:
      output1: ${{ steps.build_process_1.outputs.production }}
    steps:
      - name: See result
        run: |
          echo "Hello build is running"
          sleep 10
      - name: See result
        run: echo "::set-output name=production::true"
  
  build_process_2:
    runs-on: ubuntu-latest
    name: A Job That builds 2
    outputs:
      output1: ${{ steps.build_process_2.outputs.production }}
    steps:
      - name: See result
        run: |
          echo "Hello build is running"
          sleep 10
      - name: See result
        run: echo "::set-output name=production::true"

  run-automation:
      runs-on: ubuntu-latest
      if: |
        ${{ needs.check_pr_labels_job.outputs.output1 == 'true' 
            && needs.build_process_1.outputs.production == 'true'
            && needs.build_process_2.outputs.production == 'true' }}
      needs: [check_pr_labels_job, build_process_1, build_process_2]
      outputs:
        output1: ${{ steps.automation.outputs.production }}
      steps:
        - name: Checkout code
          uses: actions/checkout@v2

        - name: Run Automation
          id: automation
          run: echo "::set-output name=production::true"

  build_process_3:
    runs-on: ubuntu-latest
    if: |
        ${{ needs.check_pr_labels_job.outputs.output1 == 'true' 
            && needs.build_process_1.outputs.production == 'true'
            && needs.build_process_2.outputs.production == 'true' }}
    needs: [check_pr_labels_job, build_process_1, build_process_2]
    name: A Job That builds 3
    steps:
      - name: See result
        run: |
          echo "Hello build is running"
          sleep 10
  
  build_process_4:
    runs-on: ubuntu-latest
    if: |
        ${{ needs.check_pr_labels_job.outputs.output1 == 'true' 
            && needs.build_process_1.outputs.production == 'true'
            && needs.build_process_2.outputs.production == 'true' }}
    needs: [check_pr_labels_job, build_process_1, build_process_2]
    name: A Job That builds 4
    steps:
      - name: See result
        run: |
          echo "Hello build is running"
          sleep 10
  
  echo-runned-automation:
    runs-on: ubuntu-latest
    needs: [run-automation, build_process_3, build_process_4]
    steps:
      - run: echo ${{needs.run-automation.outputs.output1}}

  success-labels:
      runs-on: ubuntu-latest
      if: ${{ needs.run-automation.outputs.output1 == 'true' }}
      needs: [run-automation, build_process_3, build_process_4]
      steps:
        - name: add labels
          uses: actions-ecosystem/action-add-labels@v1
          with:
            github_token: ${{ github.token }}
            labels: |
              Automation Passes 
  
  fail-labels:
      runs-on: ubuntu-latest
      if: ${{ !needs.run-automation.outputs.output1 == 'false' }}
      needs: [run-automation, build_process_3, build_process_4]
      steps:
        - name: add labels
          uses: actions-ecosystem/action-add-labels@v1
          with:
            github_token: ${{ github.token }}
            labels: |
              Automation Failed
            number: ${{ github.event.pull_request.number }} 
            
  
